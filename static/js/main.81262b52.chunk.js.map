{"version":3,"sources":["firebase/config.js","firebase/useFirestore.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","messagingSenderId","appId","measurementId","myFirestore","firestore","useFirestore","collectionName","useState","docs","setDocs","useEffect","unsubscribe","collection","onSnapshot","snap","newDocs","forEach","doc","push","data","id","App","modules","groups","group","setGroup","modulesGroup","setModulesGroup","viewer","setViewer","editor","setEditor","handleChange","e","target","value","className","Dropdown","Toggle","variant","name","Menu","sort","a","b","x","toLowerCase","y","map","Item","onClick","filter","module","handleSelectGroup","types","type","content","title","onChange","placeholder","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81262b52.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDmZSo7o8WB-bsge5T_Rd9VJdODhA-wD2Y\",\r\n    authDomain: \"my-firebase-1f789.firebaseapp.com\",\r\n    projectId: \"my-firebase-1f789\",\r\n    messagingSenderId: \"917517905132\",\r\n    appId: \"1:917517905132:web:2cc22f398c1a2511a209c9\",\r\n    measurementId: \"G-7N4N4SG1FZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const myFirestore = firebase.firestore();\r\n\r\n  export { myFirestore };","import { useState , useEffect } from 'react'\r\nimport { myFirestore } from '../firebase/config.js'\r\n\r\nexport const useFirestore = (collectionName) => {\r\n    const [docs , setDocs] = useState([]);\r\n    useEffect(()=>{\r\n        const unsubscribe = myFirestore.collection(collectionName)\r\n            .onSnapshot((snap)=>{\r\n                let newDocs = [];\r\n                snap.forEach(doc=>{\r\n                    newDocs.push({...doc.data(), id: doc.id})\r\n                })\r\n                setDocs(newDocs);\r\n            })\r\n        return () => unsubscribe();\r\n    }, [collectionName]);\r\n\r\n    return docs;\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { Dropdown } from 'react-bootstrap'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { useState } from 'react';\nimport { useFirestore } from './firebase/useFirestore';\n\nfunction App() {\n  const modules = useFirestore('moduloose/moduloose-main/modules'); //Array of all modules\n  const groups = useFirestore('moduloose/moduloose-main/groups'); //Array of all groups\n  \n  const [group, setGroup] = useState(null);\n  const [modulesGroup, setModulesGroup] = useState(null);\n\n  const [viewer, setViewer] = useState(\"\");\n  const [editor, setEditor] = useState(\"\");\n\n  const handleChange = (e) => {\n    if(e.target.id === \"viewer\"){\n      setViewer(e.target.value);\n    } else {\n      setEditor(e.target.value);\n    }\n  }\n\n  const handleSelectGroup = (group) => {\n    setGroup(group);\n    setModulesGroup(modules.filter((module) => module.group === group.name));\n  }\n  \n  //RENDER USER PAGE\n  return (\n    <div id=\"app\" className=\"App\">\n      <div id=\"content-container\" className=\"row container-fluid\">\n        <div id=\"selector-wrapper\" className=\"col-5\">\n          <h1>Moduloose</h1>\n          {/*RENDER GROUP DROPDOWN*/}\n          { groups &&\n            <Dropdown>\n              <Dropdown.Toggle variant=\"light\">\n                  {group ? group.name : \"Select Group\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {groups.sort((a, b)=>{\n              var x = a.name.toLowerCase();\n              var y = b.name.toLowerCase();\n              if (x < y) {return -1;}\n              if (x > y) {return 1;}\n              return 0;\n            }).map(group => {\n                  return(\n                    <Dropdown.Item id={group.name} onClick={() => handleSelectGroup(group)}>{group.name}</Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          }\n          {/*RENDER TYPE DROPDOWNS*/}\n          { modulesGroup && group &&\n            group.types.sort().map((type) => {\n              return (\n                <Dropdown id={type} className=\"selector-dropdown\">\n                  <Dropdown.Toggle variant=\"dark\">{type}</Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {modulesGroup && modulesGroup.filter((module)=>module.type === type).map(module => {\n                      return(\n                        <Dropdown.Item id={module.id} onClick={() => setViewer(module.content)}>{module.title}</Dropdown.Item>\n                      )})}\n                  </Dropdown.Menu>\n                </Dropdown>\n              )\n            })}\n        </div>\n        {/*RENDER WORKSPACE*/}\n        <div id=\"workspace-wrapper\" className=\"col-7\">\n          <textarea id=\"viewer\" value={viewer} onChange={handleChange} placeholder=\"Viewer\"></textarea>\n          <CopyToClipboard id=\"copy-viewer\" className=\"btn btn-dark copy-button\" text={viewer}><button>Copy Viewer</button></CopyToClipboard>\n          <textarea id=\"editor\" value={editor} onChange={handleChange} placeholder=\"Editor\"></textarea>\n          <CopyToClipboard id=\"copy-editor\" className=\"btn btn-dark copy-button\" text={editor}><button>Copy Editor</button></CopyToClipboard>\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}