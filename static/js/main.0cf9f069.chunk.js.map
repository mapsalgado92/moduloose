{"version":3,"sources":["firebase/config.js","firebase/useFirestore.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","messagingSenderId","appId","measurementId","myFirestore","firestore","useFirestore","collectionName","useState","docs","setDocs","useEffect","unsubscribe","collection","onSnapshot","snap","newDocs","forEach","doc","push","data","id","App","modules","collectionsList","setCollection","viewer","setViewer","editor","setEditor","handleChange","e","target","value","className","Dropdown","Toggle","variant","name","Menu","map","Item","onClick","types","sort","a","b","x","typeName","toLowerCase","y","type","moduleIDs","moduleID","module","find","content","title","onChange","placeholder","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAWEA,IAASC,cATU,CACjBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAcR,IAASS,YCVlBC,EAAe,SAACC,GAAoB,IAAD,EACnBC,mBAAS,IADU,mBACrCC,EADqC,KAC9BC,EAD8B,KAc5C,OAZAC,qBAAU,WACN,IAAMC,EAAcR,EAAYS,WAAWN,GACtCO,YAAW,SAACC,GACT,IAAIC,EAAU,GACdD,EAAKE,SAAQ,SAAAC,GACTF,EAAQG,KAAR,2BAAiBD,EAAIE,QAArB,IAA6BC,GAAIH,EAAIG,SAEzCX,EAAQM,MAEhB,OAAO,kBAAMJ,OACd,CAACL,IAEGE,GCiEIa,MA3Ef,WACE,IAAMC,EAAUjB,EAAa,2CACvBkB,EAAkBlB,EAAa,yCAFxB,EAIuBE,mBAAS,MAJhC,mBAINK,EAJM,KAIMY,EAJN,OAMejB,mBAAS,IANxB,mBAMNkB,EANM,KAMEC,EANF,OAOenB,mBAAS,IAPxB,mBAONoB,EAPM,KAOEC,EAPF,KASPC,EAAe,SAACC,GACD,WAAhBA,EAAEC,OAAOX,GACVM,EAAUI,EAAEC,OAAOC,OAEnBJ,EAAUE,EAAEC,OAAOC,QAKvB,OACE,qBAAKZ,GAAG,MAAMa,UAAU,MAAxB,SACE,sBAAKb,GAAG,oBAAoBa,UAAU,sBAAtC,UACE,sBAAKb,GAAG,mBAAmBa,UAAU,QAArC,UACE,2CACEV,GACA,eAACW,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,QAAzB,SACKxB,EAAaA,EAAWyB,KAAO,sBAEpC,cAACH,EAAA,EAASI,KAAV,UACGf,EAAgBgB,KAAI,SAAA3B,GACnB,OACE,cAACsB,EAAA,EAASM,KAAV,CAAepB,GAAIR,EAAWyB,KAAMI,QAAS,kBAAMjB,EAAcZ,IAAjE,SAA+EA,EAAWyB,eAMlGf,GAAWV,GACXA,EAAW8B,MAAMC,MAAK,SAACC,EAAGC,GACxB,IAAIC,EAAIF,EAAEG,SAASC,cACfC,EAAIJ,EAAEE,SAASC,cACnB,OAAIF,EAAIG,GAAY,EAChBH,EAAIG,EAAW,EACZ,KACNV,KAAI,SAAAW,GACL,OACE,eAAChB,EAAA,EAAD,CAAUd,GAAI8B,EAAKH,SAAUd,UAAU,oBAAvC,UACE,cAACC,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAzB,SACCc,EAAKH,WAEN,cAACb,EAAA,EAASI,KAAV,UACGY,EAAKC,WAAaD,EAAKC,UAAUZ,KAAI,SAAAa,GACpC,IAAIC,EAAS/B,EAAQgC,MAAK,SAAAD,GAAM,OAAIA,EAAOjC,KAAOgC,KAClD,OACE,cAAClB,EAAA,EAASM,KAAV,CAAepB,GAAIgC,EAAUX,QAAS,kBAAMf,EAAU2B,EAAOE,UAA7D,SAAwEF,GAAUA,EAAOG,sBASzG,sBAAKpC,GAAG,oBAAoBa,UAAU,QAAtC,UACE,0BAAUb,GAAG,SAASY,MAAOP,EAAQgC,SAAU5B,EAAc6B,YAAY,WACzE,cAAC,kBAAD,CAAiBtC,GAAG,cAAca,UAAU,2BAA2B0B,KAAMlC,EAA7E,SAAqF,mDACrF,0BAAUL,GAAG,SAASY,MAAOL,EAAQ8B,SAAU5B,EAAc6B,YAAY,WACzE,cAAC,kBAAD,CAAiBtC,GAAG,cAAca,UAAU,2BAA2B0B,KAAMhC,EAA7E,SAAqF,4DCtE/FiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0cf9f069.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDmZSo7o8WB-bsge5T_Rd9VJdODhA-wD2Y\",\r\n    authDomain: \"my-firebase-1f789.firebaseapp.com\",\r\n    projectId: \"my-firebase-1f789\",\r\n    messagingSenderId: \"917517905132\",\r\n    appId: \"1:917517905132:web:2cc22f398c1a2511a209c9\",\r\n    measurementId: \"G-7N4N4SG1FZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const myFirestore = firebase.firestore();\r\n\r\n  export { myFirestore };","import { useState , useEffect } from 'react'\r\nimport { myFirestore } from '../firebase/config.js'\r\n\r\nexport const useFirestore = (collectionName) => {\r\n    const [docs , setDocs] = useState([]);\r\n    useEffect(()=>{\r\n        const unsubscribe = myFirestore.collection(collectionName)\r\n            .onSnapshot((snap)=>{\r\n                let newDocs = [];\r\n                snap.forEach(doc=>{\r\n                    newDocs.push({...doc.data(), id: doc.id})\r\n                })\r\n                setDocs(newDocs);\r\n            })\r\n        return () => unsubscribe();\r\n    }, [collectionName]);\r\n\r\n    return docs;\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { Dropdown } from 'react-bootstrap'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { useState } from 'react';\nimport { useFirestore } from './firebase/useFirestore';\n\nfunction App() {\n  const modules = useFirestore('/moduloose/Uw7nTXVOrY0nocrZDLWH/Modules');\n  const collectionsList = useFirestore('moduloose/Uw7nTXVOrY0nocrZDLWH/Skills');\n  \n  const [collection, setCollection] = useState(null);\n  \n  const [viewer, setViewer] = useState(\"\");\n  const [editor, setEditor] = useState(\"\");\n\n  const handleChange = (e) => {\n    if(e.target.id === \"viewer\"){\n      setViewer(e.target.value);\n    } else {\n      setEditor(e.target.value);\n    }\n  }\n  \n  //RENDER USER PAGE\n  return (\n    <div id=\"app\" className=\"App\">\n      <div id=\"content-container\" className=\"row container-fluid\">\n        <div id=\"selector-wrapper\" className=\"col-5\">\n          <h1>Moduloose</h1>\n          { collectionsList &&\n            <Dropdown>\n              <Dropdown.Toggle variant=\"light\">\n                  {collection ? collection.name : \"Select Collection\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {collectionsList.map(collection => {\n                  return(\n                    <Dropdown.Item id={collection.name} onClick={() => setCollection(collection)}>{collection.name}</Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          }\n          { modules && collection &&\n            collection.types.sort((a, b)=>{\n              var x = a.typeName.toLowerCase();\n              var y = b.typeName.toLowerCase();\n              if (x < y) {return -1;}\n              if (x > y) {return 1;}\n              return 0;\n            }).map(type => {\n              return (\n                <Dropdown id={type.typeName} className=\"selector-dropdown\">\n                  <Dropdown.Toggle variant=\"dark\">\n                  {type.typeName}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {type.moduleIDs && type.moduleIDs.map(moduleID => {\n                      let module = modules.find(module => module.id === moduleID); \n                      return(\n                        <Dropdown.Item id={moduleID} onClick={() => setViewer(module.content)}>{module && module.title}</Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              )\n            })\n          }\n        </div>\n        <div id=\"workspace-wrapper\" className=\"col-7\">\n          <textarea id=\"viewer\" value={viewer} onChange={handleChange} placeholder=\"Viewer\"></textarea>\n          <CopyToClipboard id=\"copy-viewer\" className=\"btn btn-dark copy-button\" text={viewer}><button>Copy Viewer</button></CopyToClipboard>\n          <textarea id=\"editor\" value={editor} onChange={handleChange} placeholder=\"Editor\"></textarea>\n          <CopyToClipboard id=\"copy-editor\" className=\"btn btn-dark copy-button\" text={editor}><button>Copy Editor</button></CopyToClipboard>\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}